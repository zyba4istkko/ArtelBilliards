import { Box, Grid, Typography, TextField } from '@mui/material'
import { GameType } from '../../api/types'
import { PriceSelector, OptionSelector } from './'
import tokens from '../../styles/design-tokens'

interface GameTypeFieldsProps {
  gameType: GameType
  values: Record<string, any>
  onChange: (field: string, value: any) => void
}

// –û–ø—Ü–∏–∏ –¥–ª—è –ê–º–µ—Ä–∏–∫–∞–Ω–∫–∏ –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ø–∏—Ä–∞–º–∏–¥—ã
const BALLS_TO_WIN_OPTIONS = [
  { label: '8 —à–∞—Ä–æ–≤', value: '8' },
  { label: '9 —à–∞—Ä–æ–≤', value: '9' },
  { label: '10 —à–∞—Ä–æ–≤', value: '10' },
]

const GAME_PRICE_OPTIONS = [
  { label: '100‚ÇΩ', value: '100' },
  { label: '200‚ÇΩ', value: '200' },
  { label: '500‚ÇΩ', value: '500' },
  { label: '1000‚ÇΩ', value: '1000' },
  { label: '2000‚ÇΩ', value: '2000' },
]

const POINT_VALUE_OPTIONS = [
  { label: '25‚ÇΩ', value: '25' },
  { label: '50‚ÇΩ', value: '50' },
  { label: '100‚ÇΩ', value: '100' },
  { label: '200‚ÇΩ', value: '200' },
]

const FOUL_PENALTY_OPTIONS = [
  { label: '1 –æ—á–∫–æ', value: '1' },
  { label: '2 –æ—á–∫–∞', value: '2' },
  { label: '3 –æ—á–∫–∞', value: '3' },
]

export function GameTypeFields({ gameType, values, onChange }: GameTypeFieldsProps) {
  const renderKolkhozFields = () => (
    <Box>
      <Typography variant="h6" color={tokens.colors.mint} fontWeight={700} gutterBottom sx={{ fontSize: '1.125rem' }}>
        –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ö–æ–ª—Ö–æ–∑–∞
      </Typography>
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <PriceSelector
              label="–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –æ—á–∫–∞ (‚ÇΩ)"
              value={values.point_value_rubles || '50'}
              onChange={(value) => onChange('point_value_rubles', parseInt(value))}
              options={POINT_VALUE_OPTIONS}
            />
          </Box>
        </Grid>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <OptionSelector
              label="–®—Ç—Ä–∞—Ñ –∑–∞ —Ñ–æ–ª (–æ—á–∫–∏)"
              value={values.foul_penalty_points?.toString() || '1'}
              onChange={(value) => onChange('foul_penalty_points', parseInt(value))}
              options={FOUL_PENALTY_OPTIONS}
              row
            />
          </Box>
        </Grid>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <TextField
              fullWidth
              label="–ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤"
              type="number"
              value={values.min_players || 2}
              onChange={(e) => onChange('min_players', parseInt(e.target.value))}
              InputProps={{ inputProps: { min: 2, max: 6 } }}
              sx={{
                '& .MuiInputBase-root': {
                  background: tokens.colors.gray600,
                  color: tokens.colors.white
                },
                '& .MuiInputLabel-root': {
                  color: tokens.colors.gray300
                }
              }}
            />
          </Box>
        </Grid>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <TextField
              fullWidth
              label="–ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤"
              type="number"
              value={values.max_players || 6}
              onChange={(e) => onChange('max_players', parseInt(e.target.value))}
              InputProps={{ inputProps: { min: 2, max: 6 } }}
              sx={{
                '& .MuiInputBase-root': {
                  background: tokens.colors.gray600,
                  color: tokens.colors.white
                },
                '& .MuiInputLabel-root': {
                  color: tokens.colors.gray300
                }
              }}
            />
          </Box>
        </Grid>
      </Grid>
    </Box>
  )

  const renderAmericanaFields = () => (
    <Box>
      <Typography variant="h6" color={tokens.colors.mint} fontWeight={700} gutterBottom sx={{ fontSize: '1.125rem' }}>
        –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–º–µ—Ä–∏–∫–∞–Ω–∫–∏
      </Typography>
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <PriceSelector
              label="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞—Ä—Ç–∏–∏ (‚ÇΩ)"
              value={values.game_price_rubles?.toString() || '500'}
              onChange={(value) => onChange('game_price_rubles', parseInt(value))}
              options={GAME_PRICE_OPTIONS}
            />
          </Box>
        </Grid>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <OptionSelector
              label="–®–∞—Ä–æ–≤ –¥–æ –ø–æ–±–µ–¥—ã"
              value={values.balls_to_win?.toString() || '8'}
              onChange={(value) => onChange('balls_to_win', parseInt(value))}
              options={BALLS_TO_WIN_OPTIONS}
              row
            />
          </Box>
        </Grid>
        <Grid item xs={12}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <Typography variant="subtitle2" color={tokens.colors.gray300} sx={{ mb: 1 }}>
              –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã
            </Typography>
            <Typography variant="body2" color={tokens.colors.gray400}>
              ‚Ä¢ –ò–≥—Ä–∞ –¥–ª—è 2 –∏–≥—Ä–æ–∫–æ–≤<br/>
              ‚Ä¢ –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –∑–∞–±—å–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞—Ä–æ–≤<br/>
              ‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π —Å—á–µ—Ç –±–µ–∑ –æ—á–∫–æ–≤ - —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ç—ã—Ö —à–∞—Ä–æ–≤
            </Typography>
          </Box>
        </Grid>
      </Grid>
    </Box>
  )

  const renderMoscowPyramidFields = () => (
    <Box>
      <Typography variant="h6" color={tokens.colors.mint} fontWeight={700} gutterBottom sx={{ fontSize: '1.125rem' }}>
        –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ø–∏—Ä–∞–º–∏–¥—ã
      </Typography>
      <Grid container spacing={3}>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <PriceSelector
              label="–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞—Ä—Ç–∏–∏ (‚ÇΩ)"
              value={values.game_price_rubles?.toString() || '1000'}
              onChange={(value) => onChange('game_price_rubles', parseInt(value))}
              options={GAME_PRICE_OPTIONS}
            />
          </Box>
        </Grid>
        <Grid item xs={12} md={6}>
          <Box sx={{ background: tokens.colors.gray700, borderRadius: '14px', p: 2 }}>
            <OptionSelector
              label="–®–∞—Ä–æ–≤ –¥–æ –ø–æ–±–µ–¥—ã"
              value={values.balls_to_win?.toString() || '8'}
              onChange={(value) => onChange('balls_to_win', parseInt(value))}
              options={BALLS_TO_WIN_OPTIONS}
              row
            />
          </Box>
        </Grid>
        <Grid item xs={12}>
          <Box sx={{ 
            background: `linear-gradient(135deg, ${tokens.colors.coral}20, ${tokens.colors.mint}20)`,
            borderRadius: '14px', 
            p: 2,
            border: `1px solid ${tokens.colors.mint}40`
          }}>
            <Typography variant="subtitle2" color={tokens.colors.mint} sx={{ mb: 1, fontWeight: 600 }}>
              üî∫ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ø–∏—Ä–∞–º–∏–¥—ã
            </Typography>
            <Typography variant="body2" color={tokens.colors.gray300}>
              ‚Ä¢ –ò–≥—Ä–∞ –¥–ª—è 2 –∏–≥—Ä–æ–∫–æ–≤ –æ–¥–Ω–∏–º –∂–µ–ª—Ç—ã–º —à–∞—Ä–æ–º<br/>
              ‚Ä¢ –í—Å–µ–≥–æ –Ω–∞ —Å—Ç–æ–ª–µ 16 —à–∞—Ä–æ–≤ (15 + –∂–µ–ª—Ç—ã–π –±–∏—Ç–æ–∫)<br/>
              ‚Ä¢ –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –∑–∞–±—å–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞—Ä–æ–≤<br/>
              ‚Ä¢ –ò–≥—Ä–∞ –≤–µ–¥–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∂–µ–ª—Ç—ã–º —à–∞—Ä–æ–º - –æ—Å—Ç–∞–ª—å–Ω—ã–µ —à–∞—Ä—ã —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—è–º–∏
            </Typography>
          </Box>
        </Grid>
      </Grid>
    </Box>
  )

  switch (gameType) {
    case 'kolkhoz':
      return renderKolkhozFields()
    case 'americana':
      return renderAmericanaFields()
    case 'moscow_pyramid':
      return renderMoscowPyramidFields()
    default:
      return null
  }
}
