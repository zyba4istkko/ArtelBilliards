import { Card, CardContent, Container, Typography, Grid, Box, Chip, LinearProgress } from '@mui/material'
import { EmojiEvents, Person, LocalFireDepartment } from '@mui/icons-material'

function StatsPage() {
  // Mock stats data
  const stats = {
    overview: [
      { label: '–í—Å–µ–≥–æ –∏–≥—Ä', value: 47, icon: 'üéÆ' },
      { label: '–ü–æ–±–µ–¥', value: 32, icon: 'üèÜ' },
      { label: '–ü–æ—Ä–∞–∂–µ–Ω–∏–π', value: 15, icon: 'üòî' },
      { label: '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥', value: '68%', icon: 'üìä' }
    ],
    recentGames: [
      { opponent: '–ò–≥—Ä–æ–∫ –ê', result: '–ü–æ–±–µ–¥–∞', score: '8-3', date: '2025-01-15' },
      { opponent: '–ò–≥—Ä–æ–∫ –ë', result: '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ', score: '4-8', date: '2025-01-14' },
      { opponent: '–ò–≥—Ä–æ–∫ –í', result: '–ü–æ–±–µ–¥–∞', score: '8-1', date: '2025-01-13' },
      { opponent: '–ò–≥—Ä–æ–∫ –ì', result: '–ü–æ–±–µ–¥–∞', score: '8-6', date: '2025-01-12' },
      { opponent: '–ò–≥—Ä–æ–∫ –î', result: '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ', score: '2-8', date: '2025-01-11' }
    ],
    achievements: [
      { title: '–ü–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞', description: '–í—ã–∏–≥—Ä–∞–π –ø–µ—Ä–≤—É—é –∏–≥—Ä—É', completed: true },
      { title: '–°–µ—Ä–∏—è –∏–∑ 5 –ø–æ–±–µ–¥', description: '–í—ã–∏–≥—Ä–∞–π 5 –∏–≥—Ä –ø–æ–¥—Ä—è–¥', completed: true },
      { title: '–ú–∞—Å—Ç–µ—Ä 8-ball', description: '–í—ã–∏–≥—Ä–∞–π 50 –∏–≥—Ä –≤ 8-ball', completed: false },
      { title: '–°–Ω–∞–π–ø–µ—Ä', description: '–ó–∞–±–µ–π —à–∞—Ä —Å –ø–µ—Ä–≤–æ–≥–æ —É–¥–∞—Ä–∞ 10 —Ä–∞–∑', completed: false }
    ]
  }

  return (
    <Container maxWidth="xl" sx={{ py: 4 }}>
      <Typography variant="h3" component="h1" textAlign="center" gutterBottom fontWeight="bold">
        –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      </Typography>

      {/* Overview Stats */}
      <Grid container spacing={3} mb={4}>
        {stats.overview.map((stat, index) => (
          <Grid item xs={12} sm={6} md={3} key={index}>
            <Card>
              <CardContent sx={{ textAlign: 'center', p: 3 }}>
                <Typography variant="h4" gutterBottom>
                  {stat.icon}
                </Typography>
                <Typography variant="h4" color="primary" fontWeight="bold">
                  {stat.value}
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  {stat.label}
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      <Grid container spacing={3}>
        {/* Recent Games */}
        <Grid item xs={12} lg={6}>
          <Card>
            <CardContent sx={{ p: 3 }}>
              <Box display="flex" alignItems="center" gap={1} mb={3}>
                <EmojiEvents color="primary" />
                <Typography variant="h5" fontWeight="bold">
                  –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–≥—Ä—ã
                </Typography>
              </Box>
              
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                {stats.recentGames.map((game, index) => (
                  <Box key={index} sx={{ 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'space-between', 
                    p: 2, 
                    bgcolor: 'grey.50', 
                    borderRadius: 1 
                  }}>
                    <Box display="flex" alignItems="center" gap={2}>
                      <Person color="action" />
                      <Box>
                        <Typography variant="body1" fontWeight="medium">
                          {game.opponent}
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          {game.date}
                        </Typography>
                      </Box>
                    </Box>
                    <Box textAlign="right">
                      <Chip 
                        label={game.result}
                        color={game.result === '–ü–æ–±–µ–¥–∞' ? 'success' : 'error'}
                        size="small"
                      />
                      <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                        {game.score}
                      </Typography>
                    </Box>
                  </Box>
                ))}
              </Box>
            </CardContent>
          </Card>
        </Grid>

        {/* Achievements */}
        <Grid item xs={12} lg={6}>
          <Card>
            <CardContent sx={{ p: 3 }}>
              <Box display="flex" alignItems="center" gap={1} mb={3}>
                <LocalFireDepartment color="warning" />
                <Typography variant="h5" fontWeight="bold">
                  –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                </Typography>
              </Box>
              
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                {stats.achievements.map((achievement, index) => (
                  <Box 
                    key={index} 
                    sx={{ 
                      p: 2,
                      borderRadius: 2,
                      border: 2,
                      borderColor: achievement.completed ? 'success.main' : 'grey.300',
                      bgcolor: achievement.completed ? 'success.light' : 'grey.50'
                    }}
                  >
                    <Box display="flex" alignItems="flex-start" justifyContent="space-between">
                      <Box flex={1}>
                        <Typography 
                          variant="h6" 
                          fontWeight="bold"
                          color={achievement.completed ? 'success.dark' : 'text.primary'}
                        >
                          {achievement.title}
                        </Typography>
                        <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                          {achievement.description}
                        </Typography>
                      </Box>
                      <Box sx={{ ml: 2 }}>
                        {achievement.completed ? (
                          <Box 
                            sx={{ 
                              width: 32, 
                              height: 32, 
                              bgcolor: 'success.main', 
                              borderRadius: '50%', 
                              display: 'flex', 
                              alignItems: 'center', 
                              justifyContent: 'center' 
                            }}
                          >
                            <Typography variant="body2" color="white">
                              ‚úì
                            </Typography>
                          </Box>
                        ) : (
                          <Box 
                            sx={{ 
                              width: 32, 
                              height: 32, 
                              bgcolor: 'grey.300', 
                              borderRadius: '50%' 
                            }}
                          />
                        )}
                      </Box>
                    </Box>
                    
                    {achievement.completed && (
                      <Box sx={{ mt: 2 }}>
                        <LinearProgress 
                          variant="determinate" 
                          value={100} 
                          color="success" 
                          sx={{ height: 6, borderRadius: 3 }}
                        />
                      </Box>
                    )}
                  </Box>
                ))}
              </Box>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Container>
  )
}

export default StatsPage 