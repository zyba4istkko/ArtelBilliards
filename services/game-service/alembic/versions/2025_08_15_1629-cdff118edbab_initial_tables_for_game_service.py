"""Initial tables for Game Service

Revision ID: cdff118edbab
Revises: 
Create Date: 2025-08-15 16:29:53.948885+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cdff118edbab'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('game_sessions', sa.Column('current_game_id', sa.UUID(), nullable=True))
    # Исправляем изменение типа status с правильным приведением
    op.execute("ALTER TABLE game_sessions ALTER COLUMN status TYPE session_status_enum USING status::session_status_enum")
    op.alter_column('game_sessions', 'status', nullable=False)
    op.alter_column('game_sessions', 'max_players',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('game_sessions', 'current_players_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('game_sessions', 'rules',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('game_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('game_sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_foreign_key(None, 'game_sessions', 'games', ['current_game_id'], ['id'])
    op.drop_column('game_sessions', 'creation_step')
    op.drop_column('game_sessions', 'started_at')
    op.drop_column('game_sessions', 'completed_at')
    op.add_column('games', sa.Column('queue_algorithm', sa.Enum('always_random', 'random_no_repeat', 'manual', name='queue_algorithm_enum'), nullable=False))
    op.add_column('games', sa.Column('current_queue', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('games', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('NOW()'), nullable=False))
    # Исправляем изменение типа status для games с правильным приведением
    op.execute("ALTER TABLE games ALTER COLUMN status TYPE game_status_enum USING status::game_status_enum")
    op.alter_column('games', 'status', nullable=False)
    op.alter_column('games', 'started_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(op.f('games_winner_participant_id_fkey'), 'games', type_='foreignkey')
    op.drop_column('games', 'duration_seconds')
    op.drop_column('games', 'game_data')
    op.drop_column('games', 'winner_participant_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('games', sa.Column('winner_participant_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('games', sa.Column('game_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('games', sa.Column('duration_seconds', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('games_winner_participant_id_fkey'), 'games', 'session_participants', ['winner_participant_id'], ['id'])
    op.alter_column('games', 'started_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # Исправляем откат типа status для games
    op.execute("ALTER TABLE games ALTER COLUMN status TYPE VARCHAR(50) USING status::VARCHAR(50)")
    op.alter_column('games', 'status', nullable=True)
    op.drop_column('games', 'created_at')
    op.drop_column('games', 'current_queue')
    op.drop_column('games', 'queue_algorithm')
    op.add_column('game_sessions', sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('game_sessions', sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('game_sessions', sa.Column('creation_step', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'game_sessions', type_='foreignkey')
    op.alter_column('game_sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('game_sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('game_sessions', 'rules',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('game_sessions', 'current_players_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('game_sessions', 'max_players',
               existing_type=sa.INTEGER(),
               nullable=True)
    # Исправляем откат типа status для game_sessions
    op.execute("ALTER TABLE game_sessions ALTER COLUMN status TYPE VARCHAR(50) USING status::VARCHAR(50)")
    op.alter_column('game_sessions', 'status', nullable=True)
    op.drop_column('game_sessions', 'current_game_id')
    # ### end Alembic commands ###
