#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import asyncpg
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î
DB_CONFIG = {
    'host': os.getenv('DB_HOST', 'postgres'),
    'port': int(os.getenv('DB_PORT', 5432)),
    'user': os.getenv('DB_USER', 'postgres'),
    'password': os.getenv('DB_PASSWORD', 'password'),
    'database': os.getenv('DB_NAME', 'template_db')
}

async def check_categories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    
    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(**DB_CONFIG)
    
    try:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = await conn.fetch("SELECT id, name, description FROM template_categories ORDER BY id")
        
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
        for cat in categories:
            print(f"   ‚Ä¢ ID {cat['id']}: {cat['name']} - {cat['description']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
        templates = await conn.fetch("SELECT id, name, game_type, category_id, is_system FROM game_templates ORDER BY category_id, name")
        
        print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(templates)} —à–∞–±–ª–æ–Ω–æ–≤:")
        for tpl in templates:
            print(f"   ‚Ä¢ {tpl['name']} ({tpl['game_type']}) - –ö–∞—Ç–µ–≥–æ—Ä–∏—è {tpl['category_id']} - –°–∏—Å—Ç–µ–º–Ω—ã–π: {tpl['is_system']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        await conn.close()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    asyncio.run(check_categories())
