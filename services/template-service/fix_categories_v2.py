#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π: —Å–æ–∑–¥–∞–Ω–∏–µ 3 –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (v2)
"""

import asyncio
import asyncpg
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î
DB_CONFIG = {
    'host': os.getenv('DB_HOST', 'postgres'),
    'port': int(os.getenv('DB_PORT', 5432)),
    'user': os.getenv('DB_USER', 'postgres'),
    'password': os.getenv('DB_PASSWORD', 'password'),
    'database': os.getenv('DB_NAME', 'template_db')
}

async def fix_categories():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    
    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(**DB_CONFIG)
    
    try:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("\nüìä –¢–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        categories = await conn.fetch("SELECT id, name, description FROM template_categories ORDER BY id")
        for cat in categories:
            print(f"   ‚Ä¢ ID {cat['id']}: {cat['name']} - {cat['description']}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—Ç—å—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        print("\nüÜï –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ø–∏—Ä–∞–º–∏–¥–∞'...")
        await conn.execute("""
            INSERT INTO template_categories (id, name, description, sort_order, created_at, updated_at)
            VALUES (3, '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ø–∏—Ä–∞–º–∏–¥–∞', '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ø–∏—Ä–∞–º–∏–¥—ã', 3, NOW(), NOW())
            ON CONFLICT (id) DO UPDATE SET
                name = EXCLUDED.name,
                description = EXCLUDED.description,
                sort_order = EXCLUDED.sort_order,
                updated_at = EXCLUDED.updated_at
        """)
        print("   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ø–∏—Ä–∞–º–∏–¥–∞' —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞ (ID: 3)")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è 1 -> –ö–æ–ª—Ö–æ–∑
        await conn.execute("""
            UPDATE template_categories 
            SET name = '–ö–æ–ª—Ö–æ–∑', description = '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–≥—Ä—ã –ö–æ–ª—Ö–æ–∑', updated_at = NOW()
            WHERE id = 1
        """)
        print("   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è 1 –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ '–ö–æ–ª—Ö–æ–∑'")
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è 2 –æ—Å—Ç–∞–µ—Ç—Å—è –ê–º–µ—Ä–∏–∫–∞–Ω–∫–∞
        await conn.execute("""
            UPDATE template_categories 
            SET name = '–ê–º–µ—Ä–∏–∫–∞–Ω–∫–∞', description = '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –∏–≥—Ä—ã –ê–º–µ—Ä–∏–∫–∞–Ω–∫–∞', updated_at = NOW()
            WHERE id = 2
        """)
        print("   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è 2 –æ—Å—Ç–∞–µ—Ç—Å—è '–ê–º–µ—Ä–∏–∫–∞–Ω–∫–∞'")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —à–∞–±–ª–æ–Ω–æ–≤...")
        
        # –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ø–∏—Ä–∞–º–∏–¥–∞ -> –∫–∞—Ç–µ–≥–æ—Ä–∏—è 3
        moscow_count = await conn.fetchval("""
            UPDATE game_templates 
            SET category_id = 3, updated_at = NOW()
            WHERE game_type = 'moscow_pyramid'
            RETURNING (SELECT COUNT(*) FROM game_templates WHERE game_type = 'moscow_pyramid')
        """)
        print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ø–∏—Ä–∞–º–∏–¥—ã: {moscow_count or 0}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        
        new_categories = await conn.fetch("SELECT id, name, description FROM template_categories ORDER BY id")
        print("   üìä –ò—Ç–æ–≥–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        for cat in new_categories:
            print(f"      ‚Ä¢ ID {cat['id']}: {cat['name']} - {cat['description']}")
        
        templates = await conn.fetch("""
            SELECT name, game_type, category_id 
            FROM game_templates 
            ORDER BY category_id, name
        """)
        print("   üìã –®–∞–±–ª–æ–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for template in templates:
            print(f"      ‚Ä¢ {template['name']} ({template['game_type']}) - –ö–∞—Ç–µ–≥–æ—Ä–∏—è {template['category_id']}")
        
        print("\nüéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        await conn.close()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    asyncio.run(fix_categories())
