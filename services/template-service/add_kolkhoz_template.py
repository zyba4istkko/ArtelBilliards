#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ö–æ–ª—Ö–æ–∑–∞
"""

import asyncio
import asyncpg
import json
import os
import uuid

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î
DB_CONFIG = {
    'host': os.getenv('DB_HOST', 'postgres'),
    'port': int(os.getenv('DB_PORT', 5432)),
    'user': os.getenv('DB_USER', 'postgres'),
    'password': os.getenv('DB_PASSWORD', 'password'),
    'database': os.getenv('DB_NAME', 'template_db')
}

async def add_kolkhoz_template():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ö–æ–ª—Ö–æ–∑–∞"""
    
    print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = await asyncpg.connect(**DB_CONFIG)
    
    try:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —à–∞–±–ª–æ–Ω—ã
        print("\nüìä –¢–µ–∫—É—â–∏–µ —à–∞–±–ª–æ–Ω—ã:")
        templates = await conn.fetch("""
            SELECT id, name, game_type, category_id, is_system, created_at
            FROM game_templates 
            ORDER BY name
        """)
        
        for template in templates:
            print(f"   ‚Ä¢ {template['name']} ({template['game_type']}) - –ö–∞—Ç–µ–≥–æ—Ä–∏—è {template['category_id']}")
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –ö–æ–ª—Ö–æ–∑–∞
        print("\nüÜï –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ö–æ–ª—Ö–æ–∑–∞...")
        
        kolkhoz_rules = {
            "game_type": "kolkhoz",
            "max_players": 6,
            "min_players": 2,
            "balls_total": 15,
            "point_value_rubles": 50,
            "queue_algorithm": "random_no_repeat",
            "winning_condition": "last_ball_remaining",
            "game_rules": {
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä—É—Å—Å–∫–∞—è –∏–≥—Ä–∞ –ö–æ–ª—Ö–æ–∑. –ò–≥—Ä–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞—Ä–∞",
                "ball_counting": "point_based",
                "foul_penalty_points": -1,
                "foul_penalty_description": "–®—Ç—Ä–∞—Ñ –∑–∞ —Ñ–æ–ª: -1 –æ—á–∫–æ (50‚ÇΩ –ø—Ä–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ—á–∫–∞ 50‚ÇΩ)",
                "payment_direction": "clockwise",
                "calculate_net_result": True
            }
        }
        
        kolkhoz_settings = {
            "ui_theme": "classic",
            "show_points_counter": True,
            "show_running_total": True,
            "enable_point_calculation": True,
            "show_foul_warnings": True,
            "show_payment_direction": True
        }
        
        await conn.execute("""
            INSERT INTO game_templates (id, creator_user_id, name, description, game_type, rules, settings, category_id, is_public, is_system, tags)
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
        """, 
        str(uuid.uuid4()),
        '00000000-0000-0000-0000-000000000000',
        '–ö–æ–ª—Ö–æ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (50‚ÇΩ –∑–∞ –æ—á–∫–æ)',
        '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä—É—Å—Å–∫–∞—è –∏–≥—Ä–∞ –ö–æ–ª—Ö–æ–∑. –ò–≥—Ä–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞—Ä–∞. 50‚ÇΩ –∑–∞ –æ—á–∫–æ',
        'kolkhoz',
        json.dumps(kolkhoz_rules),
        json.dumps(kolkhoz_settings),
        1, True, True, json.dumps(["–∫–æ–ª—Ö–æ–∑", "—Ä—É—Å—Å–∫–∏–π –±–∏–ª—å—è—Ä–¥", "–∫–ª–∞—Å—Å–∏–∫–∞"]))
        
        print("   ‚úÖ –ö–æ–ª—Ö–æ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        
        remaining_templates = await conn.fetch("""
            SELECT id, name, game_type, category_id, is_system, created_at
            FROM game_templates 
            ORDER BY name
        """)
        
        print(f"   üìä –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å {len(remaining_templates)} —à–∞–±–ª–æ–Ω–æ–≤:")
        for template in remaining_templates:
            print(f"      ‚Ä¢ {template['name']} ({template['game_type']}) - –ö–∞—Ç–µ–≥–æ—Ä–∏—è {template['category_id']}")
        
        print("\nüéâ –®–∞–±–ª–æ–Ω –ö–æ–ª—Ö–æ–∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise
    finally:
        await conn.close()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    asyncio.run(add_kolkhoz_template())
