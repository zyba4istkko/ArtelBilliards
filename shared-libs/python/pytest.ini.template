# Базовый шаблон pytest для всех микросервисов Artel Billiards
# Скопируйте этот файл в корень каждого сервиса и настройте под конкретный сервис

[tool:pytest]
# Минимальная версия pytest
minversion = 6.0

# Паттерны для поиска тестов
testpaths = tests

# Паттерны файлов тестов
python_files = test_*.py *_test.py

# Паттерны классов тестов
python_classes = Test*

# Паттерны функций тестов
python_functions = test_*

# Дополнительные опции
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --asyncio-mode=auto
    --durations=10

# Маркеры для категоризации тестов
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow tests (>5s)
    auth: Authentication related tests
    database: Database related tests
    api: API endpoint tests
    websocket: WebSocket tests
    worker: Background worker tests
    rabbitmq: RabbitMQ message tests
    redis: Redis cache tests
    security: Security and vulnerability tests
    performance: Performance tests
    
# Фильтры для предупреждений
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Переменные окружения для тестов (настройте под каждый сервис)
env = 
    TESTING = true
    ENVIRONMENT = testing
    # Для каждого сервиса укажите свою тестовую БД:
    # AUTH SERVICE: DATABASE_URL = postgresql://postgres:password@localhost:5432/auth_db_test
    # GAME SERVICE: DATABASE_URL = postgresql://postgres:password@localhost:5432/game_db_test
    # и т.д.
    DATABASE_URL = postgresql://postgres:password@localhost:5432/service_test_db
    REDIS_URL = redis://localhost:6379/1
    RABBITMQ_URL = amqp://admin:password@localhost:5672
    JWT_SECRET_KEY = test-secret-key-change-me
    SERVICE_NAME = test-service
    SERVICE_PORT = 0

# Параметры асинхронности
asyncio_mode = auto

# Параллельность тестов (установите pytest-xdist)
# addopts += -n auto

# Повторы для нестабильных тестов (установите pytest-rerunfailures)
# addopts += --reruns 2 --reruns-delay 1